plugins {
    id 'fabric-loom' version '0.5-SNAPSHOT'
    id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

repositories {
    maven { url 'https://jitpack.io' }
	// REI, odds and ends
    // Testament of god (aka portal api)
    maven { url "https://dl.bintray.com/kyrptonaught/customportalapi" }
    // Seedy Behavior
    maven { url "https://hephaestus.dev/release" }
	maven {
		name = "CurseForge"
		url = "https://minecraft.curseforge.com/api/maven"
	}
    jcenter()
}

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    // Fabric API. This is technically optional, but you probably want it anyway.
    modImplementation("net.fabricmc.fabric-api:fabric-api:${project.fabric_version}") {
        exclude module: "fabric-biomes-v1"
    }


    // Fabric-ASM
    modImplementation("com.github.Chocohead:Fabric-ASM:v2.1") {
        exclude (group: "net.fabricmc.fabric-api")
    }
    include "com.github.Chocohead:Fabric-ASM:v2.1"

    // CustomPortalAPI Dependency
    modImplementation("net.kyrptonaught:customportalapi:0.0.1-beta14-1.16") {
        exclude (group: "net.fabricmc.fabric-api")
    }
    include "net.kyrptonaught:customportalapi:0.0.1-beta14-1.16"

    // Seedy Behavior
    modImplementation("dev.hephaestus:seedy-behavior:1.0.1") {
        exclude (group: "net.fabricmc.fabric-api")
    }
    include "dev.hephaestus:seedy-behavior:1.0.1"

    // Add ModMenu dependency in-dev to see our config
    modImplementation("com.github.Prospector:ModMenu:1.16-SNAPSHOT") {
        exclude(group: "net.fabricmc.fabric-api")
    }

    // Add required config libraries
    modApi("me.sargunvohra.mcmods:autoconfig1u:3.2.2") {
        exclude(group: "net.fabricmc.fabric-api")
    }
    include "me.sargunvohra.mcmods:autoconfig1u:3.2.2"
    modApi("me.shedaniel.cloth:config-2:4.8.2") {
        exclude (group: "net.fabricmc.fabric-api")
    }
    include "me.shedaniel.cloth:config-2:4.8.2"

    // PSA: Some older mods, compiled on Loom 0.2.1, might have outdated Maven POMs.
    // You may need to force-disable transitiveness on them.

	// Annotations
	implementation 'org.jetbrains:annotations:19.0.0'
}

processResources {
    inputs.property "version", project.version

    from(sourceSets.main.resources.srcDirs) {
        include "fabric.mod.json"
        expand "version": project.version
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude "fabric.mod.json"
    }
}

tasks.withType(JavaCompile).configureEach {
    // ensure that the encoding is set to UTF-8, no matter what the system default is
    // this fixes some edge cases with special characters not displaying correctly
    // see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
    // If Javadoc is generated, this must be specified in that task too.
    it.options.encoding = "UTF-8"

    // The Minecraft launcher currently installs Java 8 for users, so your mod probably wants to target Java 8 too
    // JDK 9 introduced a new way of specifying this that will make sure no newer classes or methods are used.
    // We'll use that if it's available, but otherwise we'll use the older option.
    def targetVersion = 8
    if (JavaVersion.current().isJava9Compatible()) {
        it.options.release = targetVersion
    }
}

// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
// if it is present.
// If you remove this task, sources will not be generated.
task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = "sources"
    from sourceSets.main.allSource
}

jar {
    from "LICENSE"
}